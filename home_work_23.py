# hw 23
# Согласно древней индийской легенде создатель шахмат за своё изобретение попросил у раджи незначительную,
# на первый взгляд, награду: столько пшеничных зёрен, сколько окажется на шахматной доске,
# если на первую клетку положить одно зерно, на вторую — два зерна, на третью — четыре зерна и т. д.
# Оказалось, что такого количества зерна нет на всей планете (оно равно 2**64 − 1 зерен.
# Посчитайте, начиная с какой клетки по счету, общее количество зерен,
# которое должен был бы отдать раджа изобретателю было больше 1 000 000 зерен
# и сколько конкретно зерен он должен был бы отдать.
# def chess_reward(): # returns 2 ints (cell number and total number of corns)
#     pass


# print('Задание 23'
#       '\nСогласно древней индийской легенде создатель шахмат за своё изобретение попросил у раджи незначительную,'
#       '\nна первый взгляд, награду: столько пшеничных зёрен, сколько окажется на шахматной доске,'
#       '\nесли на первую клетку положить одно зерно, на вторую — два зерна, на третью — четыре зерна и т. д.'
#       '\nОказалось, что такого количества зерна нет на всей планете (оно равно 2**64 − 1 зерен.'
#       '\nПосчитайте, начиная с какой клетки по счету, общее количество зерен,'
#       '\nкоторое должен был бы отдать раджа изобретателю было больше 1 000 000 зерен'
#       '\nи сколько конкретно зерен он должен был бы отдать.'
#       '\ndef chess_reward(): # returns 2 ints (cell number and total number of corns)'
#       '\n       pass'
#       '\n')
#


# def chess_reward():

def chess_table(n, m):
    cell_number = 0
    cur_number_of_corns = 0
    total_number_of_corns = 0
    print('\n-----------')
    print('Pyph Table:')
    print('-----------')
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            cur_number_of_corns = 2 ** cell_number
            cell_number += 1
            total_number_of_corns += cur_number_of_corns
            print(cell_number, cur_number_of_corns, total_number_of_corns)
            if total_number_of_corns >= 1000000:
                print('c этого момента')
                print()
    return cell_number, total_number_of_corns
    print()
print(chess_table(8, 8))

